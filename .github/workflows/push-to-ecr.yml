name: Build & Push to ECR

on:
  push:
    branches: [ "main" ] 
  workflow_dispatch:

permissions:
  id-token: write   # required for OIDC
  contents: read

env:
  AWS_REGION: eu-west-1
  ECR_REPO: whisper-faster
  DOCKERFILE: docker/whisper-worker/Dockerfile

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::155186308102:role/GitHubActionsECRPush
          aws-region: ${{ env.AWS_REGION }}

      - name: Build & Push
        shell: bash
        run: |
          set -euxo pipefail

          # identity sanity check
          aws sts get-caller-identity

          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          REGISTRY="${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
          ECR_URI="${REGISTRY}/${ECR_REPO}"
          echo "ECR_URI=$ECR_URI"

          # optional: ensure the repo exists (requires ecr:CreateRepository)
          aws ecr describe-repositories --repository-names "${ECR_REPO}" \
            || aws ecr create-repository --repository-name "${ECR_REPO}"

          # login to ecr
          aws ecr get-login-password --region "${AWS_REGION}" \
            | docker login --username AWS --password-stdin "${REGISTRY}"

          # build (fails immediately if the path is wrong)
          test -f "${DOCKERFILE}"
          docker build -t app -f "${DOCKERFILE}" .

          # tag + push
          docker tag app:latest "${ECR_URI}:latest"
          docker push "${ECR_URI}:latest"
