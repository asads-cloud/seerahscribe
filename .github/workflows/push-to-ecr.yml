name: Build & push Docker image to ECR (OIDC)

on:
  push:
    branches: [ main ]
    paths:
      - "docker/**"
      - ".github/workflows/push-to-ecr.yml"

permissions:
  id-token: write        # required for OIDC
  contents: read

env:
  AWS_REGION: eu-west-1
  ECR_REPO: whisper-faster

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::155186308102:role/GitHubActionsECRPush

      - name: Resolve ECR URI
        id: ecr
        shell: bash
        run: |
          set -euo pipefail
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "ACCOUNT_ID=$ACCOUNT_ID" >> $GITHUB_ENV
          echo "ECR_URI=${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}" >> $GITHUB_ENV
          echo "ECR registry: ${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
          echo "Full repo URI: ${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}"

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region "$AWS_REGION" \
            | docker login --username AWS --password-stdin "${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"

      - name: Build image
        run: |
          docker build \
            -t ${ECR_REPO}:dev \
            -f docker/whisper-worker/Dockerfile \
            .

      - name: Tag & push :latest
        run: |
          docker tag ${ECR_REPO}:dev "${ECR_URI}:latest"
          docker push "${ECR_URI}:latest"

      - name: Show pushed image
        run: |
          aws ecr describe-images --repository-name "$ECR_REPO" \
            --query 'imageDetails[?contains(imageTags, `latest`)] | [0].imageDigest' \
            --output text
