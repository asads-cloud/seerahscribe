name: Build & Push to ECR

on:
  # run when you push to main
  push:
    branches: [ "main" ]
  # allow manual runs too
  workflow_dispatch:

permissions:
  id-token: write     # required for OIDC
  contents: read      # checkout

env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: whisper-faster  # the aws ecr thingy

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) Assume your IAM role via OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::155186308102:role/GitHubActionsECRPush
          aws-region: ${{ env.AWS_REGION }}

      # 2) Compute account id and full ECR URI
      - name: Get AWS account ID
        id: acct
        run: |
          echo "id=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_OUTPUT

      - name: Set ECR URI
        id: ecr
        run: |
          echo "uri=${{ steps.acct.outputs.id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}" >> $GITHUB_OUTPUT

      # 3) Login to ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region "${{ env.AWS_REGION }}" \
          | docker login --username AWS --password-stdin "${{ steps.ecr.outputs.uri }}"

      # 4) Build image (small, deterministic context thanks to .dockerignore)
      - name: Build Docker image
        run: |
          docker build \
            -t app:build \
            -f docker/whisper-worker/Dockerfile \
            .

      # 5) Tag with 'latest' and the commit SHA (best practice: unique + floating tag)
      - name: Tag image
        run: |
          docker tag app:build "${{ steps.ecr.outputs.uri }}:latest"
          docker tag app:build "${{ steps.ecr.outputs.uri }}:${{ github.sha }}"

      # 6) Push both tags
      - name: Push to ECR
        run: |
          docker push "${{ steps.ecr.outputs.uri }}:latest"
          docker push "${{ steps.ecr.outputs.uri }}:${{ github.sha }}"
